name: Release iOS - Production

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version: patch | minor | major'
        required: true
      release:
        description: 'Version type beta | prod'
        required: true

env:
  USER_EMAIL: ${{ secrets.USER_EMAIL }}
  USER_NAME: ${{ secrets.USER_NAME }}

  LANG: en_US.UTF-8
  APPLE_PROFILE: ${{ secrets.APPLE_PROFILE }}
  APPLE_PROFILE_FILE: ${{ secrets.APPLE_PROFILE_FILE }}
  APPLE_CERT: distribution.cer
  APPLE_KEY: Certificates.p12
  APPLE_KEY_PASSWORD: ${{ secrets.FASTLANE_APPLE_KEY_PASSWORD }}

  FASTLANE_APPLE_CERT: ${{ secrets.FASTLANE_APPLE_CERT }}
  FASTLANE_APPLE_KEY: ${{ secrets.FASTLANE_APPLE_KEY }}

  FASTLANE_TEAM_ID: ${{ secrets.FASTLANE_APPLE_TEAM_ID}}
  APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
  APP_STORE_CONNECT_API_KEY_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID }}
  APP_STORE_CONNECT_API_KEY_FILE: ${{ secrets.APP_STORE_CONNECT_API_KEY_FILE }}
  APP_STORE_CONNECT_API_KEY_FILE_PATH: authKey.p8

jobs:
  version-bump:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@master

      - name: Version bump and tagging
        run: |
          npm ci
          npm version ${{ github.event.inputs.version }}

  ios-prod-publish:
    needs: version-bump
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-node@master

      - name: Bundle IOS (adhoc)
        run: |
          npm run bundle-ios-prod

      - name: Version setup
        run: |
          EXTRACTED_VERSION=$(awk -F \" '/"version": ".+"/ { print $4; exit; }' package.json)
          cd "${GITHUB_WORKSPACE}/ios/"
          agvtool new-marketing-version "$EXTRACTED_VERSION"
          agvtool new-version -all "${{ github.run_number }}"

      - name: Generate certificates
        run: |
          echo "$FASTLANE_APPLE_CERT" > distribution.cer.b64
          base64 -d -i distribution.cer.b64 > ./ios/$APPLE_CERT

          echo "$APP_STORE_CONNECT_API_KEY_FILE" > authKey.p8.b64
          base64 -d -i authKey.p8.b64 > ./ios/authKey.p8

          echo "$FASTLANE_APPLE_KEY" > Certificates.p12.b64
          base64 -d -i Certificates.p12.b64 > ./ios/$APPLE_KEY

          echo "$APPLE_PROFILE_FILE" > appleProfileFile.p12.b64
          base64 -d -i appleProfileFile.p12.b64 > ./ios/$APPLE_PROFILE

          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          mv ./ios/$APPLE_PROFILE ~/Library/MobileDevice/Provisioning\ Profiles/$APPLE_PROFILE

      - name: Build with Fastlane
        run: fastlane build_ios
        working-directory: ios

      - name: Upload to testflight
        run: fastlane ${{ github.event.inputs.release }}
        working-directory: ios
